
import java.awt.HeadlessException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public MainGUI() {
        initComponents();
        txtTimeMan.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });

        txtTimeManMod.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });

        txtNumMod.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });

        txtChkNumDel.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });

        txtChNameSearch.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });

        txtChkTimeSearch.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!Character.isDigit(e.getKeyChar())) {
                    e.consume();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gTimeAdd = new javax.swing.ButtonGroup();
        gStateAdd = new javax.swing.ButtonGroup();
        gStateMod = new javax.swing.ButtonGroup();
        gTimeMod = new javax.swing.ButtonGroup();
        TabbedPane = new javax.swing.JTabbedPane();
        addTab = new javax.swing.JPanel();
        lblSelChkState = new javax.swing.JLabel();
        btnAddChk = new javax.swing.JButton();
        lblChkTime = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdbtnTimeMan = new javax.swing.JRadioButton();
        rdBtnTimeSys = new javax.swing.JRadioButton();
        txtTimeMan = new javax.swing.JFormattedTextField("#");
        jPanel2 = new javax.swing.JPanel();
        rdBtnOnAdd = new javax.swing.JRadioButton();
        rdBtnOffAdd = new javax.swing.JRadioButton();
        displayTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaDetails = new javax.swing.JTextArea();
        btnDisplayOneDetail = new javax.swing.JButton();
        btnDisplayAll = new javax.swing.JButton();
        txtNumDetail = new javax.swing.JTextField();
        modifyTab = new javax.swing.JPanel();
        lblChkMod = new javax.swing.JLabel();
        lblTimeMod = new javax.swing.JLabel();
        lblStatusMod = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        rdBtnOnMod = new javax.swing.JRadioButton();
        rdBtnOffMod = new javax.swing.JRadioButton();
        rdBtnDntMod = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        rdBtnTimeManMod = new javax.swing.JRadioButton();
        rdBtnTimeSysMod = new javax.swing.JRadioButton();
        txtTimeManMod = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        txtNumMod = new javax.swing.JTextField();
        btnMod = new javax.swing.JButton();
        deleteTab = new javax.swing.JPanel();
        lblChkNumDelete = new javax.swing.JLabel();
        txtChkNumDel = new javax.swing.JTextField();
        btnDeleteChk = new javax.swing.JButton();
        searchTab = new javax.swing.JPanel();
        lblChkNumSearch = new javax.swing.JLabel();
        lblChkTimeSearch = new javax.swing.JLabel();
        txtChNameSearch = new javax.swing.JTextField();
        txtChkTimeSearch = new javax.swing.JTextField();
        btnSearchNum = new javax.swing.JButton();
        btnSearchTime = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaDisplay = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        exitMn = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSelChkState.setText("Select Checkpoint State");

        btnAddChk.setText("Add New Checkpoint");
        btnAddChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddChkActionPerformed(evt);
            }
        });

        lblChkTime.setText("Checkpoint Time");

        gTimeAdd.add(rdbtnTimeMan);
        rdbtnTimeMan.setText("Manually Enter a Value");
        rdbtnTimeMan.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdbtnTimeManStateChanged(evt);
            }
        });
        rdbtnTimeMan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbtnTimeManMouseClicked(evt);
            }
        });
        rdbtnTimeMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbtnTimeManActionPerformed(evt);
            }
        });
        rdbtnTimeMan.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                rdbtnTimeManPropertyChange(evt);
            }
        });

        gTimeAdd.add(rdBtnTimeSys);
        rdBtnTimeSys.setSelected(true);
        rdBtnTimeSys.setText("Current Time(System Generated)");
        rdBtnTimeSys.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdBtnTimeSysStateChanged(evt);
            }
        });

        txtTimeMan.setToolTipText("TimeStamp as a Long");
        txtTimeMan.setEnabled(false);
        txtTimeMan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeManActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbtnTimeMan)
                    .addComponent(rdBtnTimeSys)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(txtTimeMan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdBtnTimeSys)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbtnTimeMan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimeMan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        gStateAdd.add(rdBtnOnAdd);
        rdBtnOnAdd.setSelected(true);
        rdBtnOnAdd.setText("ON");

        gStateAdd.add(rdBtnOffAdd);
        rdBtnOffAdd.setText("OFF");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdBtnOnAdd)
                .addGap(18, 18, 18)
                .addComponent(rdBtnOffAdd)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdBtnOnAdd)
                    .addComponent(rdBtnOffAdd))
                .addContainerGap())
        );

        javax.swing.GroupLayout addTabLayout = new javax.swing.GroupLayout(addTab);
        addTab.setLayout(addTabLayout);
        addTabLayout.setHorizontalGroup(
            addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTabLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSelChkState)
                    .addComponent(lblChkTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addTabLayout.createSequentialGroup()
                        .addGroup(addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addComponent(btnAddChk, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        addTabLayout.setVerticalGroup(
            addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTabLayout.createSequentialGroup()
                .addGroup(addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTabLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblSelChkState))
                    .addGroup(addTabLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addTabLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblChkTime)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAddChk)
                .addContainerGap())
        );

        TabbedPane.addTab("Add Checkpoint", addTab);

        txtAreaDetails.setColumns(20);
        txtAreaDetails.setRows(5);
        jScrollPane2.setViewportView(txtAreaDetails);

        btnDisplayOneDetail.setText("Display Detail");
        btnDisplayOneDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayOneDetailActionPerformed(evt);
            }
        });

        btnDisplayAll.setText("Display All Details");
        btnDisplayAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayAllActionPerformed(evt);
            }
        });

        txtNumDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayTabLayout = new javax.swing.GroupLayout(displayTab);
        displayTab.setLayout(displayTabLayout);
        displayTabLayout.setHorizontalGroup(
            displayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(displayTabLayout.createSequentialGroup()
                        .addComponent(txtNumDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDisplayOneDetail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDisplayAll)))
                .addContainerGap())
        );
        displayTabLayout.setVerticalGroup(
            displayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTabLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(displayTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDisplayOneDetail)
                    .addComponent(btnDisplayAll)
                    .addComponent(txtNumDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Display Details", displayTab);

        lblChkMod.setText("Checkpoint to Modify ");

        lblTimeMod.setText("New Time");

        lblStatusMod.setText("New Status");

        gStateMod.add(rdBtnOnMod);
        rdBtnOnMod.setSelected(true);
        rdBtnOnMod.setText("ON");

        gStateMod.add(rdBtnOffMod);
        rdBtnOffMod.setText("OFF");

        gStateMod.add(rdBtnDntMod);
        rdBtnDntMod.setText("Don't Modify");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(rdBtnOnMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdBtnOffMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdBtnDntMod)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdBtnOnMod)
                    .addComponent(rdBtnOffMod)
                    .addComponent(rdBtnDntMod))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gTimeMod.add(rdBtnTimeManMod);
        rdBtnTimeManMod.setText("Manually Enter a Value");
        rdBtnTimeManMod.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdBtnTimeManModStateChanged(evt);
            }
        });
        rdBtnTimeManMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdBtnTimeManModActionPerformed(evt);
            }
        });

        gTimeMod.add(rdBtnTimeSysMod);
        rdBtnTimeSysMod.setSelected(true);
        rdBtnTimeSysMod.setText("Current Time(System Generated)");
        rdBtnTimeSysMod.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdBtnTimeSysModStateChanged(evt);
            }
        });

        txtTimeManMod.setEnabled(false);

        gTimeMod.add(jRadioButton1);
        jRadioButton1.setText("Don't Modify");
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(rdBtnTimeManMod)
                    .addComponent(rdBtnTimeSysMod)
                    .addComponent(txtTimeManMod, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(rdBtnTimeSysMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdBtnTimeManMod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTimeManMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnMod.setText("Update Checkpoint");
        btnMod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modifyTabLayout = new javax.swing.GroupLayout(modifyTab);
        modifyTab.setLayout(modifyTabLayout);
        modifyTabLayout.setHorizontalGroup(
            modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyTabLayout.createSequentialGroup()
                .addGroup(modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyTabLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblChkMod)
                        .addGap(26, 26, 26)
                        .addComponent(txtNumMod, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(modifyTabLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(lblStatusMod)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(modifyTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnMod))
            .addGroup(modifyTabLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(lblTimeMod)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        modifyTabLayout.setVerticalGroup(
            modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChkMod)
                    .addComponent(txtNumMod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(modifyTabLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblStatusMod)))
                .addGap(31, 31, 31)
                .addGroup(modifyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(modifyTabLayout.createSequentialGroup()
                        .addComponent(lblTimeMod)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMod)
                .addContainerGap())
        );

        TabbedPane.addTab("Modify Checkpoint", modifyTab);

        lblChkNumDelete.setText("Checkpoint Number");

        btnDeleteChk.setText("Delete Checkpoint");
        btnDeleteChk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteChkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deleteTabLayout = new javax.swing.GroupLayout(deleteTab);
        deleteTab.setLayout(deleteTabLayout);
        deleteTabLayout.setHorizontalGroup(
            deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDeleteChk)
                    .addGroup(deleteTabLayout.createSequentialGroup()
                        .addComponent(lblChkNumDelete)
                        .addGap(18, 18, 18)
                        .addComponent(txtChkNumDel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        deleteTabLayout.setVerticalGroup(
            deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteTabLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChkNumDelete)
                    .addComponent(txtChkNumDel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnDeleteChk)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        TabbedPane.addTab("Delete Checkpoint", deleteTab);

        lblChkNumSearch.setText("Checkpoint Number");

        lblChkTimeSearch.setText("Checkpoint Time");

        btnSearchNum.setText("Search by Number");
        btnSearchNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNumActionPerformed(evt);
            }
        });

        btnSearchTime.setText("Search by Time");
        btnSearchTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTimeActionPerformed(evt);
            }
        });

        txtAreaDisplay.setEditable(false);
        txtAreaDisplay.setColumns(20);
        txtAreaDisplay.setRows(5);
        jScrollPane1.setViewportView(txtAreaDisplay);

        javax.swing.GroupLayout searchTabLayout = new javax.swing.GroupLayout(searchTab);
        searchTab.setLayout(searchTabLayout);
        searchTabLayout.setHorizontalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(searchTabLayout.createSequentialGroup()
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChkNumSearch)
                            .addComponent(lblChkTimeSearch))
                        .addGap(18, 18, 18)
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtChNameSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(txtChkTimeSearch))
                        .addGap(18, 18, 18)
                        .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSearchNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        searchTabLayout.setVerticalGroup(
            searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChkNumSearch)
                    .addComponent(txtChNameSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChkTimeSearch)
                    .addComponent(txtChkTimeSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabbedPane.addTab("Search Checkpoint", searchTab);

        jMenu1.setText("Actions");

        exitMn.setText("Exit");
        exitMn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMnActionPerformed(evt);
            }
        });
        jMenu1.add(exitMn);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabbedPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMnActionPerformed
        int option = JOptionPane.showConfirmDialog(rootPane, "Do you want to Exit the application?"); //confirm before quitting application
        switch (option) {
            case 0: //selected yes
                System.exit(0); //Exit from application
                break;
            default://selected No or cancel
            //do nothing
        }
    }//GEN-LAST:event_exitMnActionPerformed

    private void btnAddChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddChkActionPerformed
        Long time;
        try {
            time = Long.parseLong(txtTimeMan.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect Input for Time. Try Again");
            return;
        }
        int number = Checkpoint.getLastIndex();
        String state;
        time = (rdBtnTimeSys.isSelected()) ? System.currentTimeMillis() : time;
        if (time <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect Value for Time,Try Again");
            return;
        }
        state = (rdBtnOnAdd.isSelected()) ? "On" : "Off";
        Checkpoint.addCheckpoint(number, time, state);
        JOptionPane.showMessageDialog(rootPane, "Checkpoint Added");
    }//GEN-LAST:event_btnAddChkActionPerformed

    private void rdbtnTimeManPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_rdbtnTimeManPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbtnTimeManPropertyChange

    private void txtTimeManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeManActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeManActionPerformed

    private void rdbtnTimeManStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdbtnTimeManStateChanged
        if (rdbtnTimeMan.isSelected()) {
            txtTimeMan.setEnabled(true);
        }
    }//GEN-LAST:event_rdbtnTimeManStateChanged

    private void rdbtnTimeManActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbtnTimeManActionPerformed

    }//GEN-LAST:event_rdbtnTimeManActionPerformed

    private void rdbtnTimeManMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbtnTimeManMouseClicked

    }//GEN-LAST:event_rdbtnTimeManMouseClicked

    private void rdBtnTimeSysStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdBtnTimeSysStateChanged
        if (!rdbtnTimeMan.isSelected()) {
            txtTimeMan.setEnabled(false);
        }
    }//GEN-LAST:event_rdBtnTimeSysStateChanged

    private void btnModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModActionPerformed
        Long time;
        int number;
        String current;
        String state;
        try {
            number = Integer.parseInt(txtNumMod.getText());
            current = Checkpoint.searchCheckpoint(number + "", 0);

            state = current.split(";")[2];
            state = (rdBtnOnMod.isSelected()) ? "On" : state;
            state = (rdBtnOffMod.isSelected()) ? "Off" : state;

            time = Long.parseLong(current.split(";")[1]);
            time = (rdBtnTimeManMod.isSelected() ? Long.parseLong(txtTimeManMod.getText()) : time);
            time = (rdBtnTimeSysMod.isSelected()) ? System.currentTimeMillis() : time;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect Input. Try Again");
            return;
        }
        if (time <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect Value for Time,Try Again");
            return;
        }
        Checkpoint.modifyCheckpoint(number, time, state);
        JOptionPane.showMessageDialog(rootPane, "Checkpoint Modified");
    }//GEN-LAST:event_btnModActionPerformed

    private void rdBtnTimeSysModStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdBtnTimeSysModStateChanged
        if (!rdBtnTimeManMod.isSelected()) {
            txtTimeManMod.setEnabled(false);
        }
    }//GEN-LAST:event_rdBtnTimeSysModStateChanged

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        if (!rdBtnTimeManMod.isSelected()) {
            txtTimeManMod.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton1StateChanged

    private void rdBtnTimeManModStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdBtnTimeManModStateChanged
        if (rdBtnTimeManMod.isSelected()) {
            txtTimeManMod.setEnabled(true);
        }
    }//GEN-LAST:event_rdBtnTimeManModStateChanged

    private void rdBtnTimeManModActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdBtnTimeManModActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdBtnTimeManModActionPerformed

    private void btnDeleteChkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteChkActionPerformed
        try {
            int num = Integer.parseInt(txtChkNumDel.getText());
            if ("".equals(Checkpoint.searchCheckpoint(num + "", 0))) {
                JOptionPane.showMessageDialog(rootPane, "Checkpoint:" + num + " not found. Try Again");
                return;
            }
            Checkpoint.deleteCheckpoint(num);
            JOptionPane.showMessageDialog(rootPane, "Checkpoint Deleted:" + num);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Incorrect Input. Try Again");
        }
    }//GEN-LAST:event_btnDeleteChkActionPerformed

    private void btnSearchNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNumActionPerformed
        String line = Checkpoint.searchCheckpoint(txtChNameSearch.getText(), 0);
        if (line.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Entry with given number not found");
        }
        txtAreaDisplay.setText(line);
    }//GEN-LAST:event_btnSearchNumActionPerformed

    private void btnSearchTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTimeActionPerformed
        String text = Checkpoint.searchCheckpoint(txtChkTimeSearch.getText(), 1);
        if (text.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Entry with given number not found");
        }
        txtAreaDisplay.setText(text);
    }//GEN-LAST:event_btnSearchTimeActionPerformed

    private void btnDisplayAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayAllActionPerformed
        String text = Checkpoint.getAllDetails();
        txtAreaDetails.setText(text);
        if (text.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "No checkpoints found in log file");
        }
    }//GEN-LAST:event_btnDisplayAllActionPerformed

    private void txtNumDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumDetailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumDetailActionPerformed

    private void btnDisplayOneDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayOneDetailActionPerformed
        try {
            int number = Integer.parseInt(txtNumDetail.getText());
            String text = Checkpoint.getDetail(number);
            if (text.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "No checkpoints found in log file for given number");
            }
            txtAreaDetails.setText(text);
        } catch (NumberFormatException | HeadlessException e) {
            JOptionPane.showMessageDialog(rootPane, "Input Error.Add a valid number");
        }
    }//GEN-LAST:event_btnDisplayOneDetailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane TabbedPane;
    private javax.swing.JPanel addTab;
    private javax.swing.JButton btnAddChk;
    private javax.swing.JButton btnDeleteChk;
    private javax.swing.JButton btnDisplayAll;
    private javax.swing.JButton btnDisplayOneDetail;
    private javax.swing.JButton btnMod;
    private javax.swing.JButton btnSearchNum;
    private javax.swing.JButton btnSearchTime;
    private javax.swing.JPanel deleteTab;
    private javax.swing.JPanel displayTab;
    private javax.swing.JMenuItem exitMn;
    private javax.swing.ButtonGroup gStateAdd;
    private javax.swing.ButtonGroup gStateMod;
    private javax.swing.ButtonGroup gTimeAdd;
    private javax.swing.ButtonGroup gTimeMod;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblChkMod;
    private javax.swing.JLabel lblChkNumDelete;
    private javax.swing.JLabel lblChkNumSearch;
    private javax.swing.JLabel lblChkTime;
    private javax.swing.JLabel lblChkTimeSearch;
    private javax.swing.JLabel lblSelChkState;
    private javax.swing.JLabel lblStatusMod;
    private javax.swing.JLabel lblTimeMod;
    private javax.swing.JPanel modifyTab;
    private javax.swing.JRadioButton rdBtnDntMod;
    private javax.swing.JRadioButton rdBtnOffAdd;
    private javax.swing.JRadioButton rdBtnOffMod;
    private javax.swing.JRadioButton rdBtnOnAdd;
    private javax.swing.JRadioButton rdBtnOnMod;
    private javax.swing.JRadioButton rdBtnTimeManMod;
    private javax.swing.JRadioButton rdBtnTimeSys;
    private javax.swing.JRadioButton rdBtnTimeSysMod;
    private javax.swing.JRadioButton rdbtnTimeMan;
    private javax.swing.JPanel searchTab;
    private javax.swing.JTextArea txtAreaDetails;
    private javax.swing.JTextArea txtAreaDisplay;
    private javax.swing.JTextField txtChNameSearch;
    private javax.swing.JTextField txtChkNumDel;
    private javax.swing.JTextField txtChkTimeSearch;
    private javax.swing.JTextField txtNumDetail;
    private javax.swing.JTextField txtNumMod;
    private javax.swing.JTextField txtTimeMan;
    private javax.swing.JTextField txtTimeManMod;
    // End of variables declaration//GEN-END:variables
}
